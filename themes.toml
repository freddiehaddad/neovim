# Comprehensive theme configuration for UI and Syntax highlighting
# This file supports hot reloading - changes take effect immediately

[theme]
# Current active theme: "rust_dark"
current = "rust_dark"

# Rust-inspired Dark theme for optimal Rust development
[themes.rust_dark]
name = "Rust Dark Pro"
description = "Professional dark theme inspired by Rust's official branding and ergonomics"

[themes.rust_dark.ui]
background = "#0d1117"          # Very dark background (GitHub dark)
status_bg = "#ce422b"           # Rust logo red
status_fg = "#ffffff"           # White text for contrast
status_modified = "#f74c00"     # Rust orange (modified indicator)
line_number = "#6e7681"         # Subtle gray for line numbers
line_number_current = "#f0883e" # Rust orange for current line
cursor_line_bg = "#161b22"      # Slightly lighter than background
empty_line = "#21262d"          # Subtle indicator for empty lines
command_line_bg = "#0d1117"     # Match background
command_line_fg = "#f0f6fc"     # Light gray for command text
selection_bg = "#264f78"        # Blue selection
warning = "#d29922"             # Amber warning
error = "#f85149"               # Red error

# Tree-sitter node type mappings - maps node types directly to colors
[themes.rust_dark.tree_sitter]
# Keywords
"fn" = "#ff7b72"       # Function keyword
"let" = "#ff7b72"      # Let keyword  
"mut" = "#ff7b72"      # Mut keyword
"if" = "#ff7b72"       # If keyword
"else" = "#ff7b72"     # Else keyword
"for" = "#ff7b72"      # For keyword
"while" = "#ff7b72"    # While keyword
"loop" = "#ff7b72"     # Loop keyword
"match" = "#ff7b72"    # Match keyword
"return" = "#ff7b72"   # Return keyword
"break" = "#ff7b72"    # Break keyword
"continue" = "#ff7b72" # Continue keyword
"struct" = "#ff7b72"   # Struct keyword
"enum" = "#ff7b72"     # Enum keyword
"impl" = "#ff7b72"     # Impl keyword
"trait" = "#ff7b72"    # Trait keyword
"type" = "#ff7b72"     # Type keyword
"mod" = "#ff7b72"      # Mod keyword
"use" = "#ff7b72"      # Use keyword
"pub" = "#ff7b72"      # Pub keyword (fallback)
"self" = "#ff7b72"     # Self keyword
"Self" = "#ff7b72"     # Self type
"super" = "#ff7b72"    # Super keyword
"crate" = "#ff7b72"    # Crate keyword
"const" = "#ff7b72"    # Const keyword
"static" = "#ff7b72"   # Static keyword
"extern" = "#ff7b72"   # Extern keyword
"unsafe" = "#f85149"   # Unsafe keyword (bright red)
"async" = "#79c0ff"    # Async keyword
"await" = "#79c0ff"    # Await keyword

# Visibility
"visibility_modifier" = "#ff7b72" # pub keyword

# Types and identifiers
"type_identifier" = "#f0883e"   # Type names (structs, enums)
"primitive_type" = "#79c0ff"    # Primitive types (i32, f64, bool, etc.)
"identifier" = "#e6edf3"        # Variable names
"scoped_identifier" = "#d2a8ff" # Module::item paths

# Enum variants - distinct from type names
"enum_variant" = "#7ee787" # Enum variant names (Some, None, Ok, Err)

# Function and method identifiers
"function_identifier" = "#d2a8ff" # Function names
"method_identifier" = "#b392f0"   # Method names (slightly different purple)

# Variable types with more distinction
"parameter" = "#ffa657"           # Function parameters
"field_identifier" = "#7ee787"    # Struct field names
"constant_identifier" = "#79c0ff" # Constants (UPPER_CASE)

# Literals with more variety
"string_literal" = "#a5d6ff"     # String literals
"raw_string_literal" = "#96d0ff" # Raw string literals (lighter blue)
"char_literal" = "#c9d1d9"       # Character literals (light gray)
"integer_literal" = "#79c0ff"    # Integer numbers
"float_literal" = "#56d4dd"      # Float numbers (cyan)
"boolean_literal" = "#ff7b72"    # true/false (rust red)

# Comments
"line_comment" = "#8b949e"  # // comments
"block_comment" = "#8b949e" # /* */ comments

# Doc comment specific nodes
"doc_comment" = "#8b949e"              # Doc comment content
"outer_doc_comment_marker" = "#8b949e" # /// third slash
"inner_doc_comment_marker" = "#8b949e" # //! exclamation mark

# Punctuation and operators with more distinction
";" = "#79c0ff"  # Semicolon
"," = "#6e7681"  # Comma (muted)
"." = "#ffa657"  # Dot (orange for field access)
"::" = "#d2a8ff" # Path separator (purple)
"(" = "#c9d1d9"  # Parentheses (light gray)
")" = "#c9d1d9"
"{" = "#f0883e"  # Braces (orange)
"}" = "#f0883e"
"[" = "#79c0ff"  # Brackets (blue)
"]" = "#79c0ff"
"=" = "#ff7b72"  # Assignment (rust red)
"+" = "#7ee787"  # Arithmetic operators (green)
"-" = "#7ee787"
"*" = "#7ee787"
"/" = "#7ee787"
"%" = "#7ee787"
"&" = "#ffa657"  # Reference operators (orange)
"|" = "#d2a8ff"  # Bitwise/logical (purple)
"^" = "#d2a8ff"
"!" = "#ff7b72"  # Negation (rust red)
"<" = "#79c0ff"  # Comparison (blue)
">" = "#79c0ff"
"?" = "#f85149"  # Error propagation (bright red)

# Special containers and syntax elements
"parameters" = "#ffa657"             # Function parameters ()
"enum_variant_list" = "#6e7681"      # Enum variant list {} (muted)
"field_declaration_list" = "#6e7681" # Struct fields {} (muted)

# Macro and attribute highlighting
"macro_invocation" = "#ff7b72" # Macro calls (println!, vec!)
"attribute" = "#ffa657"        # Attributes (#[derive])
"attribute_item" = "#d2a8ff"   # Attribute contents

# Pattern matching
"match_pattern" = "#7ee787"    # Match arm patterns
"wildcard_pattern" = "#6e7681" # _ patterns (muted)

# Lifetimes and generics
"lifetime" = "#ff6b9d"       # Lifetime parameters ('a, 'static)
"type_parameter" = "#b392f0" # Generic type parameters <T>

# Default fallback for unknown nodes
"_default" = "#e6edf3" # Default text color

# Rust-specific additions with enhanced variety
[themes.rust_dark.rust_specific]
# These map to existing syntax colors but provide semantic meaning
lifetime = "#ff6b9d"       # Pink for lifetimes ('a, 'static)
attribute = "#ffa657"      # Orange for attributes (#[derive], #[cfg])
module_path = "#d2a8ff"    # Purple for module paths (std::vec::Vec)
self_keyword = "#ff7b72"   # Red for self/Self
unsafe_keyword = "#f85149" # Bright red for unsafe blocks
async_await = "#79c0ff"    # Blue for async/await keywords
visibility = "#ff7b72"     # Red for pub keywords
mutability = "#ff7b72"     # Red for mut keyword
reference = "#ffa657"      # Orange for & and &mut
dereference = "#ffa657"    # Orange for * operator
range = "#7ee787"          # Green for .. and ..= operators
question_mark = "#f85149"  # Bright red for ? operator
macro_call = "#ff7b72"     # Red for macro invocations
enum_variant = "#7ee787"   # Green for enum variant names

# Additional semantic highlighting with more distinction
[themes.rust_dark.semantic]
deprecated = "#6e7681"          # Gray out deprecated items
unused = "#6e7681"              # Gray out unused variables
mutable_reference = "#f0883e"   # Orange for &mut
immutable_reference = "#79c0ff" # Blue for &
generic_parameter = "#b392f0"   # Light purple for <T> parameters
trait_name = "#7ee787"          # Green for trait names
associated_type = "#ffa657"     # Orange for associated types
field_access = "#7ee787"        # Green for struct.field
method_call = "#b392f0"         # Light purple for obj.method()
constructor = "#f0883e"         # Orange for Type::new() calls
